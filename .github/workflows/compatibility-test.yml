name: WP & WC Compatibility Test & Auto-Bump

on:
  schedule:
    - cron: "0 6 * * *" # Daily at 6 AM UTC
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: wordpress:php8.3fpm
      env:
        WORDPRESS_DB_HOST: 127.0.0.1
        WORDPRESS_DB_USER: wpuser
        WORDPRESS_DB_PASSWORD: wppass
        WORDPRESS_DB_NAME: wordpress
      options: --user root

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        wordpress-version: [6.4, 6.5, latest]
        woocommerce-version: [8.8.2, latest]
        php-version: [8.3, 8.4]

    name: WP ${{ matrix.wordpress-version }} / WC ${{ matrix.woocommerce-version }} / PHP ${{ matrix.php-version }}

    steps:
      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y git unzip rsync default-mysql-client less

      - name: Checkout plugin
        uses: actions/checkout@v4

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            mysqladmin ping --ssl=0 -h mysql -uroot -proot && break
            echo "Waiting for MySQL..."
            sleep 3
          done

      - name: Create MySQL user for WordPress
        run: |
          mysql --ssl=0 -h mysql -u root -proot -e "CREATE USER IF NOT EXISTS 'wpuser'@'%' IDENTIFIED BY 'wppass';"
          mysql --ssl=0 -h mysql -u root -proot -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wpuser'@'%';"
          mysql --ssl=0 -h mysql -u root -proot -e "FLUSH PRIVILEGES;"

      - name: Setup PHP tools
        run: |
          curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          mv wp-cli.phar /usr/local/bin/wp

      - name: Increase PHP memory limit
        run: echo "memory_limit = 512M" > /usr/local/etc/php/conf.d/memory-limit.ini

      # - name: Install WordPress
      #   env:
      #     PHP_MEMORY_LIMIT: 512M
      #     MYSQL_SSL_DISABLED: 1
      #     MYSQL_OPT_SSL_ENFORCE: 0
      #   run: |
      #     echo -e "[client]\nssl=0\nssl-mode=DISABLED\n" > /__w/vida/vida/my.cnf
      #     chmod 644 /__w/vida/vida/my.cnf
      #     wp core download --version=${{ matrix.wordpress-version }} --path=wp --allow-root
      #     wp config create \
      #       --dbname=wordpress \
      #       --dbuser=wpuser \
      #       --dbpass=wppass \
      #       --dbhost=mysql \
      #       --path=wp \
      #       --allow-root

      #     sed -i "/require_once ABSPATH . 'wp-settings.php';/i define('WP_CLI_DB_ARGS', array('--defaults-extra-file=\/__w\/vida\/vida\/my.cnf', '--ssl=0', '--ssl-mode=DISABLED', '--no-defaults'));" wp/wp-config.php

      #     cat /__w/vida/vida/my.cnf
      #     cat wp/wp-config.php
      #     export MYSQL_SSL_DISABLED=1
      #     export MYSQL_OPT_SSL_ENFORCE=0
      #     export MYSQL_CLIENT_SSL_DISABLED=1
      #     wp db create --path=wp --allow-root
      #     wp core install \
      #       --url="http://localhost" \
      #       --title="Test Site" \
      #       --admin_user="admin" \
      #       --admin_password="password" \
      #       --admin_email="admin@example.com" \
      #       --path=wp \
      #       --allow-root

      # - name: Install WooCommerce
      #   run: |
      #     wp plugin install woocommerce --version=${{ matrix.woocommerce-version }} --activate --path=wp

      # - name: Install Plugin
      #   run: |
      #     mkdir -p wp/wp-content/plugins/vida
      #     rsync -av --exclude='.git*' --exclude='wp' --exclude='.github' ./ wp/wp-content/plugins/vida/
      #     wp plugin activate vida --path=wp

      - name: Install Composer dependencies
        run: composer install

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit

      - name: Bump versions in files
        if: github.ref == 'refs/heads/main' && ${{ matrix.wordpress-version == 'latest' && matrix.woocommerce-version == 'latest' && matrix.php-version == '8.1' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          WP_VER=$(wp core version --path=wp)
          WC_VER=$(wp plugin get woocommerce --field=version --path=wp)

          echo "Bumping WP tested up to: $WP_VER"
          echo "Bumping WC tested up to: $WC_VER"

          # Update readme.txt
          sed -i "s/^Tested up to:.*/Tested up to: $WP_VER/" readme.txt

          # Update vida.php header
          sed -i "s/^\(\s*\*\s*WC tested up to:\s*\).*/\1$WC_VER/" vida.php

          # Commit and push changes
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add readme.txt vida.php

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Bump Tested up to (WP $WP_VER) and WC tested up to ($WC_VER)"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:${GITHUB_REF#refs/heads/}